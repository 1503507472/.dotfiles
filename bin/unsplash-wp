#!/bin/bash

# Simple script's pulling given $UNSPLASH_COLLECTION to a given directory

# check unsplash dir and token:
if [ -z "$UNSPLASH_DIR" ]; then echo '$UNSPLASH_DIR is not set'; exit 1; fi
if [ -z "$UNSPLASH_TOKEN" ]; then echo '$UNSPLASH_TOKEN is not set'; exit 1; fi

# Collection ID. Either an argument or env variable:
[[ -z "$1" ]] && COLLECTION="$UNSPLASH_COLLECTION" || COLLECTION="$1"

if [ -z "$COLLECTION" ]; then
  echo 'Collection is not defined. \nEither use `unsplash-wp <collectionID>` or define env `$UNSPLASH_COLLECTION`';
  exit 1;
fi

mkdir -p $UNSPLASH_DIR

PAGE=1
PER_PAGE=30
URLS=""
DO_REQUEST=true

while [ $PAGE -ne 0 ]; do
  RESPONSE=`curl -s -H "Authorization: Client-ID $UNSPLASH_TOKEN" https://api.unsplash.com/collections/$COLLECTION/photos\?per_page\=$PER_PAGE\&page\=$PAGE` 
  _URLS=`echo "$RESPONSE" |  jq ".[] | .urls.full"`
  URLS+=$_URLS
  [[ `echo "$_URLS" | wc -l` -eq "$PER_PAGE" ]] && let "PAGE++" || PAGE=0
done;

if [ -z "$URLS" ]; then
  echo "Empty collection: $COLLECTION";
  exit 2;
fi

LENGTH=`echo "$URLS" | wc -l`
CURRENT_INDEX=0
for URL in $URLS; do 
  printf "[$CURRENT_INDEX/$LENGTH] ";
  if [[ $URL =~ \/(photo.*)\? ]]; then
    NAME="${UNSPLASH_DIR}${BASH_REMATCH[1]}.jpg";
    if test -f $NAME; then
      printf "File Exists: ${NAME##*/}"
    else
      printf "Downloading: ${NAME##*/}"
      curl -s `sed -e 's/^"//' -e 's/"$//' <<< "$URL"` -o $NAME
    fi
    sleep 0.1
    printf "\33[2K\r"
    let "CURRENT_INDEX++"
  fi
done

exit 0;
